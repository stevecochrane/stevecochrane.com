section.Project#blizzcon-2018-virtual-ticket
	h1.Project-title BlizzCon 2018 Virtual Ticket Website
	.Project-images
		.Project-imageWrap
			img.Project-image(
				src="img/v7/blizzcon-2018-1.jpg",
				srcset="img/v7/blizzcon-2018-1.jpg 1x, img/v7/blizzcon-2018-1-2x.jpg 2x",
				width="1280",
				height="520",
				alt="BlizzCon 2018 Virtual Ticket: Video Player"
			)
		.Project-imageWrap
			img.Project-image(
				src="img/v7/blizzcon-2018-2.jpg",
				srcset="img/v7/blizzcon-2018-2.jpg 1x, img/v7/blizzcon-2018-2-2x.jpg 2x",
				width="1280",
				height="705",
				alt="BlizzCon 2018 Virtual Ticket: Video Browser"
			)
	.Project-description
		.Project-summary
			ul.Project-summaryItems
				li.Project-summaryItem #[strong.Project-summaryItemTitle Role] Engineering
				li.Project-summaryItem #[strong.Project-summaryItemTitle Client] Blizzard Entertainment
				li.Project-summaryItem #[strong.Project-summaryItemTitle Date] Fall 2018
		.Project-body
			p.
				BlizzCon Virtual Ticket is a premium online video product that provides access to live and archived video of
				all of the BlizzCon convention, to Blizzard fans around the world.
			p.
				We wanted to make some big technical upgrades to the Virtual Ticket experience in 2018. Everything had been
				rendering server-side, with front-end asynchronous requests receiving large blocks of server-side-rendered
				HTML. This caused server load issues when there were traffic spikes, and it incurred costs as it required us to
				run more servers than necessary. We decided to offload a lot of rendering to the client.
			p.
				I was charged with overseeing our React implementation for a team of five engineers. I started by researching
				to determine if reimplementing large portions of the Virtual Ticket experience with React was feasible with
				our resources, and it was. We then made a library of React components, all of them connected to a Redux state
				container. This workflow not only made for a more responsive interface for the user, but the component-based
				approach also made it easier for several engineers to work in parallel.
			.Buttons
				a.Buttons-button(href="https://blizzcon.com/watch", target="_blank") View Site
